<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Button}"          
           x:Key="ChiefBar">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Yu Gothic Light"/>
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="Foreground" Value="#FFB3ACAC"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </Trigger>
            <!-- 
            А вот тута буду менять положение кнопки на основании его расположения в column
            
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                    Duration="0:0:0.2"
                                    Storyboard.TargetProperty="Column"
                                    To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>-->
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="MenuButtonTheme">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="{TemplateBinding Background}">

                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       Margin="50,0,0,0"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <!-- Тут Value это цвет фона нажатой кнопки -->
                <Setter Property="Background" Value="#004524"/>
            </Trigger>
        </Style.Triggers>

    </Style>

</ResourceDictionary>